# Example configuration for event_launcher
# vim:set ts=2 sw=2 et:

# Notify on arming change
arming_notify:  # name of process, used only for logging
  event: armed, disarmed  # prefer to split by comma
  action: run run         # but space are fine too
  shell: notify-send 'UAV Arming status' 'Has changed'  # maybe later that will provide some environment variables

# you may define custom action source (std_srvs/Trigger)
mytrigger:  # this was name of event source
  service: ~trigger_notify

trigger_notify:
  event: mytrigger
  action: run             # trigger generate only one event
  shell: notify-send 'My Trigger' 'Has called'

# you may use several event sources
othertrigger:
  service: ~trigger_stop

trigger_notify2:
  event: mytrigger, othertrigger
  action: run, stop   # stop does nothin in this example, because notify-send don't blocks
  shell:              # array will simplify parsing step
    - notify-send
    - Trigger \#2
    - Started

wireshark:
  service: run_wireshark

# env-variables are expanded for first element
trigger_wireshark:
  event: wireshark
  action: run
  shell:
    - $HOME/bin/al76-wireshark.sh # will expand
    - $PWD  # nope

# later we will support this:
rosbag_armed:
  event: [armed, disarmed] # yaml array is fine too
  action: run, stop
  rosrun: rosbag record -a -x '/mavlink/.*' --lz4 -o 'uav'

roslaunch_triggered:
  event: mytrigger
  acrion: run
  roslaunch: roscpp_tutorials launch/talker_listener.launch

# but for now: workaround
bag_start:
  service: start_record
bag_stop:
  service: stop_record
rosbag_armed_shell:
  event: start_record, stop_record
  action: run, stop
  shell: rosrun rosbag record -a -x '/mavlink/.*' --lz4 -o 'remove-me-please'
